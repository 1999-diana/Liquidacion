// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(LiquidacionDB))]
    [Migration("20220121040155_ini001")]
    partial class ini001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Entidades.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionCargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCargo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CargoId");

                    b.ToTable("cargos");
                });

            modelBuilder.Entity("Modelo.Entidades.Configuracion", b =>
                {
                    b.Property<int>("ConfiguracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HorasExtrasMaximas")
                        .HasColumnType("int");

                    b.Property<int>("HorasExtrasMinimas")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SalarioMaximo")
                        .HasColumnType("real");

                    b.Property<float>("SalrioHorasExtras")
                        .HasColumnType("real");

                    b.Property<int>("TiempoVigenteId")
                        .HasColumnType("int");

                    b.HasKey("ConfiguracionId");

                    b.HasIndex("TiempoVigenteId");

                    b.ToTable("configuraciones");
                });

            modelBuilder.Entity("Modelo.Entidades.DecimoTercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Meses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Decimost");
                });

            modelBuilder.Entity("Modelo.Entidades.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CedulaEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCivilEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroHijosEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpleadoId");

                    b.ToTable("empleados");
                });

            modelBuilder.Entity("Modelo.Entidades.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("DireccionSucursalEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTiempo")
                        .HasColumnType("int");

                    b.Property<string>("RUC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpresaId");

                    b.HasIndex("CargoId");

                    b.HasIndex("IdTiempo");

                    b.ToTable("empresas");
                });

            modelBuilder.Entity("Modelo.Entidades.InformacionPersonal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("decimotercer")
                        .HasColumnType("float");

                    b.Property<string>("diasvacaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechafin")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipocontrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoprovincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ultimaremuneracion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("personales");
                });

            modelBuilder.Entity("Modelo.Entidades.Liquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AuxilioTrans")
                        .HasColumnType("float");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoCesa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoPri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoVaca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SalarioBase")
                        .HasColumnType("float");

                    b.Property<string>("TipoContrato")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Liquidaciones");
                });

            modelBuilder.Entity("Modelo.Entidades.RolDePagos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Aportes")
                        .HasColumnType("float");

                    b.Property<double>("Comision")
                        .HasColumnType("float");

                    b.Property<double>("Horasextras")
                        .HasColumnType("float");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Prestamos")
                        .HasColumnType("float");

                    b.Property<double>("Sueldobasico")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("Modelo.Entidades.Salario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<float>("DecimoCuartoSueldo")
                        .HasColumnType("real");

                    b.Property<float>("DecimoTercerSueldo")
                        .HasColumnType("real");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTiempo")
                        .HasColumnType("int");

                    b.Property<int?>("RolDePagosId")
                        .HasColumnType("int");

                    b.Property<float>("SueldoBasico")
                        .HasColumnType("real");

                    b.Property<float>("Utilidades")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("IdTiempo");

                    b.HasIndex("RolDePagosId");

                    b.ToTable("salarios");
                });

            modelBuilder.Entity("Modelo.Entidades.Salario_Det", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("CragoId")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("idSa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("salario_det");
                });

            modelBuilder.Entity("Modelo.Entidades.TiempoTrabajoEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinTrabajo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioTrabajo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CargoId")
                        .IsUnique();

                    b.HasIndex("EmpleadoId");

                    b.ToTable("tiempotrabajoempleados");
                });

            modelBuilder.Entity("Modelo.Entidades.Configuracion", b =>
                {
                    b.HasOne("Modelo.Entidades.TiempoTrabajoEmpleado", "TiempoVigente")
                        .WithMany()
                        .HasForeignKey("TiempoVigenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TiempoVigente");
                });

            modelBuilder.Entity("Modelo.Entidades.Empresa", b =>
                {
                    b.HasOne("Modelo.Entidades.Cargo", "Cargo")
                        .WithMany("Empresas")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.TiempoTrabajoEmpleado", "TiempoTrabajo")
                        .WithMany("Empresas")
                        .HasForeignKey("IdTiempo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("TiempoTrabajo");
                });

            modelBuilder.Entity("Modelo.Entidades.Salario", b =>
                {
                    b.HasOne("Modelo.Entidades.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Empleado", "Empleado")
                        .WithMany("Salarios")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.TiempoTrabajoEmpleado", "TiempoTrabajo")
                        .WithMany("Salarios")
                        .HasForeignKey("IdTiempo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.RolDePagos", null)
                        .WithMany("Salario")
                        .HasForeignKey("RolDePagosId");

                    b.Navigation("Cargo");

                    b.Navigation("Empleado");

                    b.Navigation("TiempoTrabajo");
                });

            modelBuilder.Entity("Modelo.Entidades.Salario_Det", b =>
                {
                    b.HasOne("Modelo.Entidades.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.HasOne("Modelo.Entidades.Empresa", "Empresa")
                        .WithMany("Salario_Dets")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Salario", "Salario")
                        .WithMany("salario_s")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Empresa");

                    b.Navigation("Salario");
                });

            modelBuilder.Entity("Modelo.Entidades.TiempoTrabajoEmpleado", b =>
                {
                    b.HasOne("Modelo.Entidades.Cargo", "Cargo")
                        .WithOne("TiempoTrabajoEmpleado")
                        .HasForeignKey("Modelo.Entidades.TiempoTrabajoEmpleado", "CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Empleado", "Empleado")
                        .WithMany("TiempoTrabajoEmpleados")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Modelo.Entidades.Cargo", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("TiempoTrabajoEmpleado");
                });

            modelBuilder.Entity("Modelo.Entidades.Empleado", b =>
                {
                    b.Navigation("Salarios");

                    b.Navigation("TiempoTrabajoEmpleados");
                });

            modelBuilder.Entity("Modelo.Entidades.Empresa", b =>
                {
                    b.Navigation("Salario_Dets");
                });

            modelBuilder.Entity("Modelo.Entidades.RolDePagos", b =>
                {
                    b.Navigation("Salario");
                });

            modelBuilder.Entity("Modelo.Entidades.Salario", b =>
                {
                    b.Navigation("salario_s");
                });

            modelBuilder.Entity("Modelo.Entidades.TiempoTrabajoEmpleado", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Salarios");
                });
#pragma warning restore 612, 618
        }
    }
}
